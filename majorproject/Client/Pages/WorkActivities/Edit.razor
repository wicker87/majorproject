@page "/assessments/{assessmentId:int}/activities/edit/{activityId:int}"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Edit Work Activity</h3>
<hr />
<br />

@if (activity == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FormComponent ButtonText="Save Changes" Model="activity" OnValidSubmit="@EditActivity" />
}

<br />
<hr />
<button @onclick="CancelEdit" class="btn btn-secondary">Cancel Edit Activity</button>

@code {
    [Parameter] public int assessmentId { get; set; }
    [Parameter] public int activityId { get; set; }

    private WorkActivity activity;

    protected override async Task OnInitializedAsync()
    {
        // Fetch the activity details from the server
        activity = await _client.GetFromJsonAsync<WorkActivity>($"{Endpoints.WorkActivitiesEndpoint}/{activityId}");
    }

    private async Task EditActivity()
    {
        var response = await _client.PutAsJsonAsync($"{Endpoints.WorkActivitiesEndpoint}/{activityId}", activity);
        _navManager.NavigateTo($"/assessments/");
    }

    private void CancelEdit()
    {
        _navManager.NavigateTo($"/assessments/edit/{assessmentId}");
    }
}




